<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css"
        integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous" />
</head>

<body class="p-5">
    <h1 class="text-center" style="font-size: 60px">&#127979;</h1>
    <h2 class="text-center pb-0 mb-0">Banco Solar C.A</h2>
    <hr class="w-25 pb-1" />
    <div class="row m-auto px-5">
        <div class="col-12 col-sm-5">
            {{> formUsuario}}
            <br />
        </div>

        <div class="col-12 col-sm-7">
            {{> formTransferencia}}
        </div>
        <div class="col-12 row mt-3 mx-0 px-0">
            {{> tablaUsuarios}}

            {{> tablaTransferencias}}
            
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"
        integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"
        integrity="sha384-9/reFTGAW83EW2RDu2S0VKaIzap3H66lZH81PoYlFhbGU+6BZp6G7niu735Sk7lN"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/js/bootstrap.min.js"
        integrity="sha384-w1Q4orYjBQndcko6MimVbzY0tgp4pWB4lZ7lr30WKz0vr/aWKhXdBNmNb5D92v7s"
        crossorigin="anonymous"></script>
    <script src="https://momentjs.com/downloads/moment.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="/js/main.js"></script>

    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
        aria-hidden="true">
        <div class="modal-dialog text-dark" role="document">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="row">
                        <div class="col-2">Nombre</div>
                        <div class="col-10">
                            <input id="nombreEdit" type="text" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-2">Balance</div>
                        <div class="col-10">
                            <input id="balanceEdit" type="text" class="form-control" />
                        </div>
                    </div>

                    <button class="btn btn-danger" id="editButton">Editar</button>
                </div>
            </div>
        </div>
    </div>
</body>

</html>

<style>
    body {
        background: #e5e1dd;
    }

    form {
        padding: 15px;
        background: #f8f9fa;
        border-radius: 10px;
    }
</style>

<script>
    const setInfoModal = (nombre, balance, id) => {
        $("#nombreEdit").val(nombre);
        $("#balanceEdit").val(balance);
        $("#editButton").attr("onclick", `editUsuario('${id}')`);
    };

    const editUsuario = async (id) => {
        const name = $("#nombreEdit").val();
        const balance = $("#balanceEdit").val();
        try {
            const { data } = await axios.put(
                `http://localhost:3000/usuario?id=${id}`,
                {
                    name,
                    balance,
                }
            );
            $("#exampleModal").modal("hide");
            location.reload();
        } catch (e) {
            alert("Algo salió mal..." + e);
        }
    };

    $("form:first").submit(async (e) => {
        e.preventDefault();
        let nombre = $("form:first input:first").val();
        let balance = Number($("form:first input:nth-child(2)").val());
        try {
            const response = await fetch("http://localhost:3000/usuario", {
                method: "post",
                body: JSON.stringify({
                    nombre,
                    balance,
                }),
            });
            $("form:first input:first").val("");
            $("form:first input:nth-child(2)").val("");
            location.reload();
        } catch (e) {
            alert("Algo salió mal ..." + e);
        }
    });

    $("form:last").submit(async (e) => {
        e.preventDefault();
        let emisor = $("form:last select:first").val();
        let receptor = $("form:last select:last").val();
        let monto = $("#monto").val();
        if (!monto || !emisor || !receptor) {
            alert("Debe seleccionar un emisor, receptor y monto a transferir");
            return false;
        }
        try {
            const response = await fetch("http://localhost:3000/transferencia", {
                method: "post",
                body: JSON.stringify({
                    emisor,
                    receptor,
                    monto,
                }),
            });
            const data = await response.json();
            location.reload();
        } catch (e) {
            console.log(e);
            alert("Algo salió mal..." + e);
        }
    });

    

    const eliminarUsuario = async (id) => {
        const response = await fetch(`http://localhost:3000/usuario?id=${id}`, {
            method: "DELETE",
        });
        getUsuarios();
    };

    const getTransferencias = async () => {
        const { data } = await axios.get("http://localhost:3000/transferencias");
        $(".transferencias").html("");

        data.forEach((t) => {
            $(".transferencias").append(`
       <tr>
         <td> ${formatDate(t[4])} </td>
         <td> ${t[1]} </td>
         <td> ${t[2]} </td>
         <td> ${t[3]} </td>
       </tr>
     `);
        });
    };

    getUsuarios();
    getTransferencias();

    const formatDate = (date) => {
        const dateFormat = moment(date).format("L");
        const timeFormat = moment(date).format("LTS");
        return `${dateFormat} ${timeFormat}`;
    };
    formatDate();
</script>